//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.MyService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CusID {
            get {
                return this.CusIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CusIDField, value) != true)) {
                    this.CusIDField = value;
                    this.RaisePropertyChanged("CusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyService.ICustomerService")]
    public interface ICustomerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetData", ReplyAction="http://tempuri.org/ICustomerService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetData", ReplyAction="http://tempuri.org/ICustomerService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/AddCustomerRecord", ReplyAction="http://tempuri.org/ICustomerService/AddCustomerRecordResponse")]
        string AddCustomerRecord(WebApplication1.MyService.Customer cus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/AddCustomerRecord", ReplyAction="http://tempuri.org/ICustomerService/AddCustomerRecordResponse")]
        System.Threading.Tasks.Task<string> AddCustomerRecordAsync(WebApplication1.MyService.Customer cus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomerRecords", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerRecordsResponse")]
        System.Data.DataSet GetCustomerRecords();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomerRecords", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerRecordsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerRecordsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/DeleteRecords", ReplyAction="http://tempuri.org/ICustomerService/DeleteRecordsResponse")]
        string DeleteRecords(WebApplication1.MyService.Customer cus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/DeleteRecords", ReplyAction="http://tempuri.org/ICustomerService/DeleteRecordsResponse")]
        System.Threading.Tasks.Task<string> DeleteRecordsAsync(WebApplication1.MyService.Customer cus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/SearchCustomerRecord", ReplyAction="http://tempuri.org/ICustomerService/SearchCustomerRecordResponse")]
        System.Data.DataSet SearchCustomerRecord(WebApplication1.MyService.Customer cus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/SearchCustomerRecord", ReplyAction="http://tempuri.org/ICustomerService/SearchCustomerRecordResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchCustomerRecordAsync(WebApplication1.MyService.Customer cus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/UpdateCustomerContact", ReplyAction="http://tempuri.org/ICustomerService/UpdateCustomerContactResponse")]
        string UpdateCustomerContact(WebApplication1.MyService.Customer cus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/UpdateCustomerContact", ReplyAction="http://tempuri.org/ICustomerService/UpdateCustomerContactResponse")]
        System.Threading.Tasks.Task<string> UpdateCustomerContactAsync(WebApplication1.MyService.Customer cus);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerServiceChannel : WebApplication1.MyService.ICustomerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerServiceClient : System.ServiceModel.ClientBase<WebApplication1.MyService.ICustomerService>, WebApplication1.MyService.ICustomerService {
        
        public CustomerServiceClient() {
        }
        
        public CustomerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public string AddCustomerRecord(WebApplication1.MyService.Customer cus) {
            return base.Channel.AddCustomerRecord(cus);
        }
        
        public System.Threading.Tasks.Task<string> AddCustomerRecordAsync(WebApplication1.MyService.Customer cus) {
            return base.Channel.AddCustomerRecordAsync(cus);
        }
        
        public System.Data.DataSet GetCustomerRecords() {
            return base.Channel.GetCustomerRecords();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerRecordsAsync() {
            return base.Channel.GetCustomerRecordsAsync();
        }
        
        public string DeleteRecords(WebApplication1.MyService.Customer cus) {
            return base.Channel.DeleteRecords(cus);
        }
        
        public System.Threading.Tasks.Task<string> DeleteRecordsAsync(WebApplication1.MyService.Customer cus) {
            return base.Channel.DeleteRecordsAsync(cus);
        }
        
        public System.Data.DataSet SearchCustomerRecord(WebApplication1.MyService.Customer cus) {
            return base.Channel.SearchCustomerRecord(cus);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchCustomerRecordAsync(WebApplication1.MyService.Customer cus) {
            return base.Channel.SearchCustomerRecordAsync(cus);
        }
        
        public string UpdateCustomerContact(WebApplication1.MyService.Customer cus) {
            return base.Channel.UpdateCustomerContact(cus);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCustomerContactAsync(WebApplication1.MyService.Customer cus) {
            return base.Channel.UpdateCustomerContactAsync(cus);
        }
    }
}
